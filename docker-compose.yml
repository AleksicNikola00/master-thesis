version: "3.8"
services:
  db:
    image: postgres
    container_name: local_pgdb
    restart: always
    ports:
      - "${PG_DB_PORT}:5432"
    environment:
      POSTGRES_USER: ${PG_DB_USERNAME}
      POSTGRES_PASSWORD: ${PG_DB_PASSWORD}
      POSTGRES_DB: ${PG_DB_NAME}
    volumes:
      - local_pgdata:/var/lib/postgresql/data

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-main}"
    image: localstack/localstack
    ports:
      - "127.0.0.1:4566:${LOCALSTACK_PORT}" # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559" # external services port range
    environment:
      # LocalStack configuration: https://docs.localstack.cloud/references/configuration/
      - DEBUG=${DEBUG:-0}
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_STACK_VERSION}
    labels:
      co.elastic.logs/module: elasticsearch
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    environment:
      - node.name=es01
      - cluster.name=${ES_CLUSTER_NAME}
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ES_PASSWORD}
    mem_limit: ${ES_MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    # healthcheck:
    #   test:
    #     [
    #       "CMD-SHELL",
    #       "curl -s http://localhost:9200 | grep -q 'missing authentication credentials'",
    #     ]
    #   interval: 10s
    #   timeout: 100s
    #   retries: 120

  # setup-es:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:${ES_STACK_VERSION}
  #   user: "0"
  #   command: >
  #     bash -c '
  #       if [ "x${ES_PASSWORD}" = "x" ]; then
  #         echo "Set the ELASTIC_PASSWORD environment variable in the .env file";
  #         exit 1;
  #       elif [ "x${KIBANA_PASSWORD}" = "x" ]; then
  #         echo "Set the KIBANA_PASSWORD environment variable in the .env file";
  #         exit 1;
  #       fi;
  #       echo "Waiting for Elasticsearch availability";
  #       echo "Setting ${KIBANA_USERNAME} password";
  #       until curl -s -X POST -u "elastic:${ES_PASSWORD}" -H "Content-Type: application/json" http://es01:9200/_security/user/${KIBANA_USERNAME}/_password -d "{\"password\":\"${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 10; done;
  #       echo "All done!";
  #     '
  #   depends_on:
  #     es01:
  #       condition: service_healthy

  # kibana:
  #   depends_on:
  #     es01:
  #       condition: service_healthy
  #   image: docker.elastic.co/kibana/kibana:${ES_STACK_VERSION}
  #   labels:
  #     co.elastic.logs/module: kibana
  #   volumes:
  #     - kibanadata:/usr/share/kibana/data
  #   ports:
  #     - ${KIBANA_PORT}:5601
  #   environment:
  #     - SERVERNAME=kibana
  #     - ELASTICSEARCH_HOSTS=http://es01:${ES_PORT}
  #     - ELASTICSEARCH_USERNAME=${KIBANA_USERNAME}
  #     - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}

volumes:
  local_pgdata:
  esdata01:
    driver: local
  kibanadata:
    driver: local
